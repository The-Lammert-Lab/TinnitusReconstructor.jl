var documenterSearchIndex = {"docs":
[{"location":"funcs/","page":"Utility Functions","title":"Utility Functions","text":"CurrentModule = TinnitusReconstructor","category":"page"},{"location":"funcs/#Utility-Functions","page":"Utility Functions","title":"Utility Functions","text":"","category":"section"},{"location":"funcs/#Prediction-related-functions","page":"Utility Functions","title":"Prediction related functions","text":"","category":"section"},{"location":"funcs/","page":"Utility Functions","title":"Utility Functions","text":"subject_selection_process(stimuli_matrix::AbstractVecOrMat{T}, target_signal::AbstractVector{T}) where {T<:Real}","category":"page"},{"location":"funcs/#TinnitusReconstructor.subject_selection_process-Union{Tuple{T}, Tuple{AbstractVecOrMat{T}, AbstractVector{T}}} where T<:Real","page":"Utility Functions","title":"TinnitusReconstructor.subject_selection_process","text":"subject_selection_process(stimuli_matrix::AbstractVecOrMat{T}, target_signal::AbstractVector{T}) where {T<:Real}\n\nPerform the synthetic subject decision process, given a matrix of precomputed stimuli stimuli_matrix and a target_signal. The stimuli_matrix is of size m x n where m is the number of trials and n is the number of samples in the signal. The target_signal is a flat vector of size n or an n x 1 matrix. Return the n-dimensional response vector y as well as the stimuli_matrix as well as nothing for the binned representation.\n\n\n\n\n\n","category":"method"},{"location":"funcs/#Reconstruction-related-functions","page":"Utility Functions","title":"Reconstruction related functions","text":"","category":"section"},{"location":"funcs/","page":"Utility Functions","title":"Utility Functions","text":"TinnitusReconstructor.gs\nTinnitusReconstructor.cs\nTinnitusReconstructor.zhangpassivegamma\nTinnitusReconstructor.soft_threshold","category":"page"},{"location":"funcs/#TinnitusReconstructor.gs","page":"Utility Functions","title":"TinnitusReconstructor.gs","text":"gs(responses, Φ)\n\nLinear reverse correlation.\n\nReferences\n\nGosselin, F. and Schyns, P.G., 2003. Superstitious perceptions reveal properties of internal representations. Psychological science, 14(5), pp.505-509.\n\n\n\n\n\n","category":"function"},{"location":"funcs/#TinnitusReconstructor.cs","page":"Utility Functions","title":"TinnitusReconstructor.cs","text":"cs(responses, Φ, Γ::Integer=32)\n\nOne-bit compressed sensing reverse correlation with basis.\n\nReferences\n\nPlan, Y. and Vershynin, R., 2012. Robust 1-bit compressed sensing and sparse logistic regression: A convex programming approach. IEEE Transactions on Information Theory, 59(1), pp.482-494.\nZhang, L., Yi, J. and Jin, R., 2014, June. Efficient algorithms for robust one-bit compressive sensing. In International Conference on Machine Learning (pp. 820-828). PMLR.\n\n\n\n\n\n","category":"function"},{"location":"funcs/#TinnitusReconstructor.zhangpassivegamma","page":"Utility Functions","title":"TinnitusReconstructor.zhangpassivegamma","text":"zhangpassivegamma(Φ::AbstractArray{T}, y, Γ::Integer) where {T<:Real}\n\nPassive algorithm for 1-bit compressed sensing with no basis.\n\nReferences\n\nZhang, L., Yi, J. and Jin, R., 2014, June. Efficient algorithms for robust one-bit compressive sensing. In International Conference on Machine Learning (pp. 820-828). PMLR.\n\n\n\n\n\n","category":"function"},{"location":"funcs/#TinnitusReconstructor.soft_threshold","page":"Utility Functions","title":"TinnitusReconstructor.soft_threshold","text":"soft_threshold(α, γ)\n\nSoft thresholding operator for use in compressed sensing.\n\n\n\n\n\n","category":"function"},{"location":"funcs/#Audio-manipulation","page":"Utility Functions","title":"Audio manipulation","text":"","category":"section"},{"location":"funcs/","page":"Utility Functions","title":"Utility Functions","text":"TinnitusReconstructor.synthesize_audio\nTinnitusReconstructor.crop_signal!\nTinnitusReconstructor.crop_signal\nTinnitusReconstructor.wav2spect\nTinnitusReconstructor.dB\nTinnitusReconstructor.invdB","category":"page"},{"location":"funcs/#TinnitusReconstructor.synthesize_audio","page":"Utility Functions","title":"TinnitusReconstructor.synthesize_audio","text":"synthesize_audio(spect::AbstractVecOrMat, nfft::Integer)\n\nSynthesize audio from a frequency spectrum spect using a number of FFT points nfft.\n\nArguments\n\nspect::AbstractVecOrMat: frequency spectrum\nnfft::Integer: number of FFT points\n\n\n\n\n\n","category":"function"},{"location":"funcs/#TinnitusReconstructor.crop_signal!","page":"Utility Functions","title":"TinnitusReconstructor.crop_signal!","text":"crop_signal!(audio::SampleBuf{T, I}; start=0, stop=1) where {T, I}\n\nCrops an audio buffer to between start and stop in seconds.\n\n\n\n\n\n","category":"function"},{"location":"funcs/#TinnitusReconstructor.crop_signal","page":"Utility Functions","title":"TinnitusReconstructor.crop_signal","text":"crop_signal(audio::SampleBuf{T, I}; start=0, stop=1) where {T, I}\n\nReturns an audio buffer cropped to between start and stop in seconds.\n\nSee also crop_signal!.\n\n\n\n\n\n","category":"function"},{"location":"funcs/#TinnitusReconstructor.wav2spect","page":"Utility Functions","title":"TinnitusReconstructor.wav2spect","text":"Crops a signal from 0:duration, where duration is in seconds, computes the short-time Fourier transform, converts to decibels, and then averages across STFT windows.\n\nArguments\n\naudio::Union{AbstractSampleBuf, Matrix}\nduration::Real: duration in seconds\n\nExample Usage\n\naudio = load(audio_file_path)\nspect = wav2spect(audio; duration = 1.0)\n\n\n\n\n\n","category":"function"},{"location":"funcs/#TinnitusReconstructor.dB","page":"Utility Functions","title":"TinnitusReconstructor.dB","text":"dB(x)\n\nConvert from amplitude-scale to decibel-scale via\n\nmathrmdB(x) = 10 mathrmlog10(x)\n\nExamples\n\n```jldoctest\n\njulia> TinnitusReconstructor.dB.([1, 2, 100]) 3-element Vector{Float64}:   0.0   3.010299956639812  20.0 ````\n\nSee also\n\ninvdB\n\n\n\n\n\n","category":"function"},{"location":"funcs/#TinnitusReconstructor.invdB","page":"Utility Functions","title":"TinnitusReconstructor.invdB","text":"invdB(x)\n\nConvert from decibel-scale to amplitude-scale via\n\nmathrminvdB(x) = 10^x10\n\nExamples\n\njulia> TinnitusReconstructor.invdB.([-100, 0, 1, 2, 100])\n5-element Vector{Float64}:\n 1.0e-10\n 1.0\n 1.2589254117941673\n 1.5848931924611136\n 1.0e10\n\nSee also\n\ndB\n\n\n\n\n\n","category":"function"},{"location":"stimgens/","page":"Stimulus Generation","title":"Stimulus Generation","text":"CurrentModule = TinnitusReconstructor","category":"page"},{"location":"stimgens/#Stimgen-Types","page":"Stimulus Generation","title":"Stimgen Types","text":"","category":"section"},{"location":"stimgens/#Abstract-Types","page":"Stimulus Generation","title":"Abstract Types","text":"","category":"section"},{"location":"stimgens/","page":"Stimulus Generation","title":"Stimulus Generation","text":"TinnitusReconstructor.Stimgen\nTinnitusReconstructor.BinnedStimgen","category":"page"},{"location":"stimgens/#TinnitusReconstructor.Stimgen","page":"Stimulus Generation","title":"TinnitusReconstructor.Stimgen","text":"Abstract supertype for all stimulus generation.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.BinnedStimgen","page":"Stimulus Generation","title":"TinnitusReconstructor.BinnedStimgen","text":"BinnedStimgen <: Stimgen\n\nAbstract supertype for all binned stimulus generation.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#Binned-stimgens","page":"Stimulus Generation","title":"Binned stimgens","text":"","category":"section"},{"location":"stimgens/","page":"Stimulus Generation","title":"Stimulus Generation","text":"TinnitusReconstructor.Bernoulli\nTinnitusReconstructor.Brimijoin\nTinnitusReconstructor.BrimijoinGaussianSmoothed\nTinnitusReconstructor.GaussianNoise\nTinnitusReconstructor.GaussianPrior\nTinnitusReconstructor.PowerDistribution\nTinnitusReconstructor.UniformNoise\nTinnitusReconstructor.UniformPrior\nTinnitusReconstructor.UniformPriorWeightedSampling","category":"page"},{"location":"stimgens/#TinnitusReconstructor.Bernoulli","page":"Stimulus Generation","title":"TinnitusReconstructor.Bernoulli","text":"Bernoulli(; kwargs...) <: BinnedStimgen\n\nStimulus generation type in which      each tonotopic bin has a probability bin_prob     of being at 0 dB, otherwise it is at -100 dB.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\nbin_prob::Real=0.3: The probability of a bin being filled.\nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.Brimijoin","page":"Stimulus Generation","title":"TinnitusReconstructor.Brimijoin","text":"Brimijoin(; kwargs...) <: BinnedStimgen\n\nStimulus generation type in which      each tonotopic bin is filled with an amplitude      value from an equidistant list with equal probability.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\namp_min::Real = -20: The lowest dB value a bin can have.\namp_max::Real = 0: The highest dB value a bin can have.\namp_step::Int = 6: The number of evenly spaced steps between amp_min and amp_max. \nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.BrimijoinGaussianSmoothed","page":"Stimulus Generation","title":"TinnitusReconstructor.BrimijoinGaussianSmoothed","text":"BrimijoinGaussianSmoothed(; kwargs...) <: BinnedStimgen\n\nStimulus generation type in which      each tonotopic bin is filled by a Gaussian      with a maximum amplitude value chosen     from an equidistant list with equal probability.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\namp_min::Real = -20: The lowest dB value a bin can have.\namp_max::Real = 0: The highest dB value a bin can have.\namp_step::Int = 6: The number of evenly spaced steps between amp_min and amp_max. \nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.GaussianNoise","page":"Stimulus Generation","title":"TinnitusReconstructor.GaussianNoise","text":"GaussianNoise(; kwargs...) <: BinnedStimgen\n\nStimulus generation type in which      each tonotopic bin is filled with amplitude chosen from a Gaussian distribution.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\namplitude_mean::Real = -10: The mean of the Gaussian. \namplitude_var::Real = 3: The variance of the Gaussian. \n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.GaussianPrior","page":"Stimulus Generation","title":"TinnitusReconstructor.GaussianPrior","text":"GaussianPrior(; kwargs...) <: BinnedStimgen\n\nStimulus generation type in which      the number of filled bins is selected from      from a Gaussian distribution with known mean and variance parameters.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\nn_bins_filled_var::Real = 1: The variance of number of bins that may be filled on any stimuli.\nn_bins_filled_mean::Integer = 20: The mean number of bins that may be filled on any stimuli.\nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.PowerDistribution","page":"Stimulus Generation","title":"TinnitusReconstructor.PowerDistribution","text":"PowerDistribution(; kwargs...) <: BinnedStimgen\n\nStimulus generation type in which      the frequencies in each bin are sampled      from a power distribution learned     from tinnitus examples.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\ndistribution_filepath::AbstractString=joinpath(@__DIR__, \"distribution.csv\"): The filepath to the default power distribution from which stimuli are generated\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.UniformNoise","page":"Stimulus Generation","title":"TinnitusReconstructor.UniformNoise","text":"UniformNoise(; kwargs...) <: BinnedStimgen\n\nStimulus generation type in which      each tonotopic bin is filled with amplitude chosen from a Uniform distribution.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.UniformPrior","page":"Stimulus Generation","title":"TinnitusReconstructor.UniformPrior","text":"UniformPrior(; kwargs...) <: BinnedStimgen\n\nStimulus generation type in which      the number of filled bins is selected from      the Uniform distribution on the interval [min_bins, max_bins].\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\nmin_bins::Integer = 10: The minimum number of bins that may be filled on any stimuli.\nmax_bins::Integer = 50: The maximum number of bins that may be filled on any stimuli.\nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.UniformPriorWeightedSampling","page":"Stimulus Generation","title":"TinnitusReconstructor.UniformPriorWeightedSampling","text":"UniformPriorWeightedSampling(; kwargs...) <: BinnedStimgen\n\nStimulus generation type in which      each tonotopic bin is filled from a uniform distribution on [min_bins, max_bins]     but which bins are filled is determined by a non-uniform distribution.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\nalpha_::Real = 1: The tuning parameter that exponentiates the number of unique frequencies in each bin.\nmin_bins::Integer = 10: The minimum number of bins that may be filled on any stimuli.\nmax_bins::Integer = 50: The maximum number of bins that may be filled on any stimuli.\nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#Unbinned-stimgens","page":"Stimulus Generation","title":"Unbinned stimgens","text":"","category":"section"},{"location":"stimgens/","page":"Stimulus Generation","title":"Stimulus Generation","text":"TinnitusReconstructor.UniformNoiseNoBins\nTinnitusReconstructor.GaussianNoiseNoBins","category":"page"},{"location":"stimgens/#TinnitusReconstructor.UniformNoiseNoBins","page":"Stimulus Generation","title":"TinnitusReconstructor.UniformNoiseNoBins","text":"UniformNoiseNoBins(; kwargs...) <: Stimgen\n\nStimulus generation type in which      each frequency is chosen from a uniform distribution on [-100, 0] dB.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\n\n\n\n\n\n","category":"type"},{"location":"stimgens/#TinnitusReconstructor.GaussianNoiseNoBins","page":"Stimulus Generation","title":"TinnitusReconstructor.GaussianNoiseNoBins","text":"GaussianNoiseNoBins(; kwargs...) <: Stimgen\n\nStimulus generation type in which      each frequency's amplitude is chosen according to a Gaussian distribution.\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\namplitude_mean::Real = -10: The mean of the Gaussian. \namplitude_var::Real = 3: The variance of the Gaussian. \n\n\n\n\n\n","category":"type"},{"location":"stimgen_methods/","page":"Stimulus Generation Methods","title":"Stimulus Generation Methods","text":"CurrentModule = TinnitusReconstructor","category":"page"},{"location":"stimgen_methods/#Stimgen-Methods","page":"Stimulus Generation Methods","title":"Stimgen Methods","text":"","category":"section"},{"location":"stimgen_methods/#All-stimgen","page":"Stimulus Generation Methods","title":"All stimgen","text":"","category":"section"},{"location":"stimgen_methods/","page":"Stimulus Generation Methods","title":"Stimulus Generation Methods","text":"TinnitusReconstructor.generate_stimulus\nTinnitusReconstructor.fs\nTinnitusReconstructor.nsamples\nTinnitusReconstructor.subject_selection_process(s::SG, target_signal::AbstractVector{T}, n_trials::I) where {SG<:Stimgen,T<:Real,I<:Integer}\nTinnitusReconstructor.subject_selection_process(s::SG, target_signal::AbstractMatrix{T}, n_trials::I) where {SG<:Stimgen,T<:Real,I<:Integer}\nTinnitusReconstructor.generate_stimuli_matrix(s::SG, n_trials::I) where {SG<:Stimgen, I<:Integer}\n","category":"page"},{"location":"stimgen_methods/#TinnitusReconstructor.generate_stimulus","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.generate_stimulus","text":"generate_stimulus(s::Stimgen)\n\nGenerate one stimulus sound.\n\nReturns waveform, sample rate, spectral representation,  binned representation, and a frequency vector  (the last two empty if s >: BinnedStimgen).  Methods are specialized for each concrete subtype of Stimgen.\n\n\n\n\n\n","category":"function"},{"location":"stimgen_methods/#TinnitusReconstructor.fs","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.fs","text":"fs(s::SG) where {SG<:Stimgen}\n\nReturn the number of samples per second.\n\n\n\n\n\n","category":"function"},{"location":"stimgen_methods/#TinnitusReconstructor.nsamples","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.nsamples","text":"nsamples(s::SG) where {SG<:Stimgen}\n\nReturn the number of samples as an Integer. This means that the product fs(s) * s.duration must be an Integer or an InexactError will be thrown.\n\nExamples\n\n```jldoctest julia> s = UniformPrior(; Fs=44.1e3, duration=0.5); nsamples(s) 22050\n\njulia> s = UniformPrior(; Fs=44.1e3, duration=0.7); nsamples(s) ERROR: InexactError: Int64(30869.999999999996)\n\n\n\n\n\n","category":"function"},{"location":"stimgen_methods/#TinnitusReconstructor.subject_selection_process-Union{Tuple{I}, Tuple{T}, Tuple{SG}, Tuple{SG, AbstractVector{T}, I}} where {SG<:TinnitusReconstructor.Stimgen, T<:Real, I<:Integer}","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.subject_selection_process","text":"subject_selection_process(s::SG, target_signal::AbstractVector{T}, n_trials::I) where {SG<:Stimgen,T<:Real,I<:Integer}\n\nPerform the synthetic subject decision process, generating the stimuli on-the-fly using the stimulus generation method s.\n\n\n\n\n\n","category":"method"},{"location":"stimgen_methods/#TinnitusReconstructor.subject_selection_process-Union{Tuple{I}, Tuple{T}, Tuple{SG}, Tuple{SG, AbstractMatrix{T}, I}} where {SG<:TinnitusReconstructor.Stimgen, T<:Real, I<:Integer}","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.subject_selection_process","text":"subject_selection_process(s::SG, target_signal::AbstractMatrix{T}, n_trials::I) where {SG<:Stimgen,T<:Real,I<:Integer}\n\nConvert target_signal to Vector if passed as a Matrix.\n\n\n\n\n\n","category":"method"},{"location":"stimgen_methods/#TinnitusReconstructor.generate_stimuli_matrix-Union{Tuple{I}, Tuple{SG}, Tuple{SG, I}} where {SG<:TinnitusReconstructor.Stimgen, I<:Integer}","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.generate_stimuli_matrix","text":"generate_stimuli_matrix(s::SG, n_trials::I) where {SG<:Stimgen, I<:Integer}\n\nGenerate n_trials of stimuli based on specifications in the stimgen type.\n\nReturns stimuli_matrix, Fs, spect_matrix, binned_repr_matrix.      binned_repr_matrix = nothing if s >: BinnedStimgen.\n\n\n\n\n\n","category":"method"},{"location":"stimgen_methods/#Binned-only","page":"Stimulus Generation Methods","title":"Binned only","text":"","category":"section"},{"location":"stimgen_methods/","page":"Stimulus Generation Methods","title":"Stimulus Generation Methods","text":"TinnitusReconstructor.generate_stimuli_matrix(s::BS, n_trials::I) where {BS<:BinnedStimgen, I<:Integer}\nTinnitusReconstructor.freq_bins\nTinnitusReconstructor.empty_spectrum\nTinnitusReconstructor.spect2binnedrepr\nTinnitusReconstructor.binnedrepr2spect\nTinnitusReconstructor.build_distribution","category":"page"},{"location":"stimgen_methods/#TinnitusReconstructor.generate_stimuli_matrix-Union{Tuple{I}, Tuple{BS}, Tuple{BS, I}} where {BS<:TinnitusReconstructor.BinnedStimgen, I<:Integer}","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.generate_stimuli_matrix","text":"generate_stimuli_matrix(s::BS, n_trials::I) where {BS<:BinnedStimgen, I<:Integer}\n\nGenerate n_trials of stimuli based on specifications in the stimgen type.\n\nReturns stimuli_matrix, Fs, spect_matrix, binned_repr_matrix. \n\n\n\n\n\n","category":"method"},{"location":"stimgen_methods/#TinnitusReconstructor.freq_bins","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.freq_bins","text":"freq_bins(s::BS) where {BS<:BinnedStimgen}\n\nGenerates a vector indicating which frequencies belong to the same bin,     following a tonotopic map of audible frequency perception.\n\n\n\n\n\n","category":"function"},{"location":"stimgen_methods/#TinnitusReconstructor.empty_spectrum","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.empty_spectrum","text":"empty_spectrum(s::BS) where {BS<:BinnedStimgen}\n\nGenerate an nfft x 1 vector of Ints, where all values are -100. \n\n\n\n\n\n","category":"function"},{"location":"stimgen_methods/#TinnitusReconstructor.spect2binnedrepr","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.spect2binnedrepr","text":"spect2binnedrepr(s::BinnedStimgen, spect::AbstractVecOrMat{T}) where {BS<:BinnedStimgen,T}\n\nConvert a spectral representation into a binned representation.\n\nReturns an n_trials x n_bins array containing the amplitude of the spectrum in each frequency bin,     where n_trials = size(binned_repr, 2).\n\n\n\n\n\n","category":"function"},{"location":"stimgen_methods/#TinnitusReconstructor.binnedrepr2spect","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.binnedrepr2spect","text":"binnedrepr2spect(s::BinnedStimgen, binned_repr::AbstractArray{T}) where {BS<:BinnedStimgen,T}\n\nConvert the binned representation into a spectral representation.\n\nReturns an n_frequencies x n_trials spectral array, where n_trials = size(binned_repr, 2).\n\n\n\n\n\n","category":"function"},{"location":"stimgen_methods/#TinnitusReconstructor.build_distribution","page":"Stimulus Generation Methods","title":"TinnitusReconstructor.build_distribution","text":"build_distribution(s::PowerDistribution; save_path::AbstractString=@__DIR__)\n\nBuilds the default power distribution from ATA tinnitus sample files.     Saves the distribution as a vector in dB at save_path.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = TinnitusReconstructor","category":"page"},{"location":"#TinnitusReconstructor","page":"Home","title":"TinnitusReconstructor","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TinnitusReconstructor.","category":"page"},{"location":"#Citation","page":"Home","title":"Citation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Please use the citation here to reference this work.","category":"page"}]
}
