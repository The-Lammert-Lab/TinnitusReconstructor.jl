var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = TinnitusReconstructor","category":"page"},{"location":"#TinnitusReconstructor","page":"Home","title":"TinnitusReconstructor","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for TinnitusReconstructor.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [TinnitusReconstructor]","category":"page"},{"location":"#TinnitusReconstructor.BinnedStimgen","page":"Home","title":"TinnitusReconstructor.BinnedStimgen","text":"BinnedStimgen <: Stimgen\n\nAbstract supertype for all binned stimulus generation.\n\n\n\n\n\n","category":"type"},{"location":"#TinnitusReconstructor.Stimgen","page":"Home","title":"TinnitusReconstructor.Stimgen","text":"Abstract supertype for all stimulus generation.\n\n\n\n\n\n","category":"type"},{"location":"#TinnitusReconstructor.UniformPrior-Tuple{}","page":"Home","title":"TinnitusReconstructor.UniformPrior","text":"UniformPrior(; kwargs...) <: BinnedStimgen\n\nOuter constructor for stimulus generation type in which      the number of filled bins is selected from      the Uniform distribution on the interval [min_bins, max_bins].\n\nKeywords\n\nmin_freq::Real = 100: The minimum frequency in range from which to sample.\nmax_freq::Real = 22e3: The maximum frequency in range from which to sample.\nduration::Real = 0.5: The length of time for which stimuli are played in seconds.\nn_trials::Integer = 100: The number of trials the subject will complete.\nFs::Real = 44.1e3: The frequency of the stimuli in Hz.\nn_bins::Integer = 100: The number of bins into which to partition the frequency range.\nmin_bins::Integer = 10: The minimum number of bins that may be filled on any stimuli.\nmax_bins::Integer = 50: The maximum number of bins that may be filled on any stimuli.\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.crop_signal!-Union{Tuple{SampledSignals.AbstractSampleBuf{T, I}}, Tuple{I}, Tuple{T}} where {T, I}","page":"Home","title":"TinnitusReconstructor.crop_signal!","text":"crop_signal!(audio::SampleBuf{T, I}; start=0, stop=1) where {T, I}\n\nCrops an audio buffer to between start and stop in seconds. TODO: use Unitful to add dimensions to these values.\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.crop_signal-Union{Tuple{SampledSignals.AbstractSampleBuf{T, I}}, Tuple{I}, Tuple{T}} where {T, I}","page":"Home","title":"TinnitusReconstructor.crop_signal","text":"crop_signal(audio::SampleBuf{T, I}; start=0, stop=1) where {T, I}\n\nReturns an audio buffer cropped to between start and stop in seconds. TODO: use Unitful to add dimensions to these values.\n\nSee also crop_signal!.\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.cs-Union{Tuple{T}, Tuple{Any, AbstractArray{T}}, Tuple{Any, AbstractArray{T}, Integer}} where T<:Real","page":"Home","title":"TinnitusReconstructor.cs","text":"cs(responses, Φ, Γ::Integer=32)\n\nCompressed sensing reverse correlation.\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.empty_spectrum-Tuple{TinnitusReconstructor.BinnedStimgen}","page":"Home","title":"TinnitusReconstructor.empty_spectrum","text":"empty_spectrum(s::BinnedStimgen)\n\nGenerate an nfft x 1 vector of Ints, where all values are -100. \n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.freq_bins-Tuple{TinnitusReconstructor.BinnedStimgen}","page":"Home","title":"TinnitusReconstructor.freq_bins","text":"freq_bins(s::BinnedStimgen)\n\nGenerates a vector indicating which frequencies belong to the same bin,     following a tonotopic map of audible frequency perception.\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.generate_stimuli_matrix-Tuple{TinnitusReconstructor.Stimgen}","page":"Home","title":"TinnitusReconstructor.generate_stimuli_matrix","text":"generate_stimuli_matrix(s::Stimgen)\n\nGenerate a stimuli matrix based on specifications in the stimgen type.\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.gs-Tuple{Any, Any}","page":"Home","title":"TinnitusReconstructor.gs","text":"gs(responses, Φ)\n\nLinear reverse correlation.\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.play_scaled_audio-Tuple{Any, Any}","page":"Home","title":"TinnitusReconstructor.play_scaled_audio","text":"play_scaled_audio(x, Fs)\n\nScales audio signal from -1 to 1 then plays it. Adapted from MATLAB's soundsc.\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.spect2binnedrepr-Union{Tuple{T}, Tuple{TinnitusReconstructor.BinnedStimgen, AbstractArray{T}}} where T","page":"Home","title":"TinnitusReconstructor.spect2binnedrepr","text":"spect2binnedrepr(s::BinnedStimgen, spect::AbstractArray{T}) where {T}\n\nGet the binned representation of the spectrum.\n\nReturns a vector containing the amplitude of the spectrum in each frequency bin.\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.subject_selection_process","page":"Home","title":"TinnitusReconstructor.subject_selection_process","text":"subject_selection_process(s::Stimgen, target_signal::AbstractVector{T}) where {T<:Real}\nsubject_selection_process(s::Stimgen, target_signal::AbstractMatrix{T}) where {T<:Real}\nsubject_selection_process(stimuli::AbstractArray{T}, target_signal::AbstractVector{T}) where {T<:Real}\nsubject_selection_process(stimuli::AbstractArray{T}, target_signal::AbstractMatrix{T}) where {T<:Real}\n\nIdealized model of a subject performing the task.\n\nSpecify a Stimgen type from which to generate stimuli or input a stimuli matrix. Return an n_samples x 1 vector of -1 for \"no\" and 1 for \"yes\".\n\n\n\n\n\n","category":"function"},{"location":"#TinnitusReconstructor.synthesize_audio-Tuple{Any, Any}","page":"Home","title":"TinnitusReconstructor.synthesize_audio","text":"synthesize_audio(X, nfft)\n\nSynthesize audio from spectrum, X\n\n\n\n\n\n","category":"method"},{"location":"#TinnitusReconstructor.wav2spect-Tuple{String}","page":"Home","title":"TinnitusReconstructor.wav2spect","text":"wav2spect(audio_file::String; duration=0.5)\n\nLoad an audio file, crop it to duration,     then compute and return the Welch power spectral density estimate.\n\n\n\n\n\n","category":"method"}]
}
